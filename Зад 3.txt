#include <stdlib.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <string.h>
#include <stdio.h>
#include <unistd.h>
#include <sys/wait.h>
#include <stdlib.h>
#include <time.h>
#include <signal.h>
#include <pthread.h>

void*msg(void*arg) {
    printf("------------- Process %d ----------- |  With thread %lu --------- |---------%s-----------|\n", getpid(), pthread_self(), (char*)arg);
}


int main(int argc, char *argv[]) {  

if(argc != 4) {
    fprintf(stderr, "Not enough arguments");
    exit(-1);
}

int P = atoi(argv[1]);
int T = atoi(argv[2]);
char *MSG = argv[3];

int id;
for(int i = 0; i < P; i++) {
    
    if(fork() == 0) {

        pthread_t threads[T];
        for(int i = 0; i < T; i++) {
            pthread_create(&threads[i], NULL, msg, MSG);
        }

        for(int i = 0; i < T; i++) {
            pthread_join(threads[i], NULL);
        }
        exit(0);
    }

 }

 for(int i = 0; i < P; i++) {
     wait(NULL);
 }


return 0;
}
